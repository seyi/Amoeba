#	
#	@(#)Amakefile	1.4	96/02/16 15:40:57
#
# Copyright 1994 Vrije Universiteit, The Netherlands.
# For full copyright and restrictions on use see the file COPYRIGHT in the
# top level of the Amoeba distribution.

CONF_ROOT = <CROOT>;
SRC_ROOT = <SROOT>;
ARCH = <ARCH>;

SRC_DIR = $SRC_ROOT/util/ajax/flex;
%include $SRC_DIR/Amake.srclist;

SKELETON_FILE = '"/profile/module/flex/flex.skel"';
F_SKELETON_FILE = '"/profile/module/flex/flex.fastskel"';
SKEL_FLAGS = {
	'-DDEFAULT_SKELETON_FILE='$SKELETON_FILE,
	'-DFAST_SKELETON_FILE='$F_SKELETON_FILE
};

INCLUDES = {
	-I.,
	-I$SRC_DIR,
	-I$SRC_ROOT/h,
	-I$SRC_ROOT/h/posix
};

COMM_SRCS = {
	$U_FLEX,
	$U_FLEX_MAIN[flags=$SKEL_FLAGS]
};

# We have to get . out of the path for this since we don't want it using
# the flex it previously produced by this file.

%import PATH;
PATH = $PATH \ {'','.'};
%export PATH;

LEX = flex;
LEXFLAGS = '-is';

%include $CONF_ROOT/toolset/amoeba.bin;

LIBS = {
	$LIB_AJAX,
	$LIB_AMOEBA
};

LINTLIBS = {
	$LINT_AJAX,
	$LINT_AMOEBA
};

#
# If flex already exists, we can use it to make the new flex.
# Otherwise we will create a bootstrapping version, that doesn't need it.
# We use the built-in function vpath() to implement this.  Vpath returns '.'
# when it cannot find the file in the list of directories given.
#
flexdir = vpath(flex, $PATH);

%if ($flexdir == '.', {
   echo('Creating bootstrap version of flex.');
   %instance gcluster(flex, $COMM_SRCS + $U_FIRST_FLEX, $LIBS, $LINTLIBS);
}, {
   echo({'Using', $flexdir/flex, 'to create new flex.'});
   %instance gcluster(flex, $COMM_SRCS + $U_SUBSEQUENT_FLEX, $LIBS, $LINTLIBS);
});

