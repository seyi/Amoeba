#	
#	@(#)Amakefile	1.12	96/02/16 15:38:13
#
# Copyright 1996 Vrije Universiteit and Stichting Mathematisch Centrum,
# The Netherlands.
# For full copyright and restrictions on use see the file COPYRIGHT in the
# top level of the Amoeba distribution.

CONF_ROOT = <CROOT>;
SRC_ROOT = <SROOT>;
ARCH = <ARCH>;

%include $SRC_ROOT/lib/libam/Amake.srclist;
%include $SRC_ROOT/lib/stubs/Amake.srclist;
%include $SRC_ROOT/lib/libc/Amake.srclist;
%include $SRC_ROOT/lib/sysam/Amake.srclist;
%include $SRC_ROOT/lib/math/$ARCH/Amake.srclist;
%include $SRC_ROOT/lib/profiling/Amake.srclist;

INCLUDES = {
	-I$SRC_ROOT/h,
	-I$SRC_ROOT/h/server,
	-I$SRC_ROOT/h/machdep/arch/$ARCH,
	-I$SRC_ROOT/h/posix,
	-I$SRC_ROOT/h/posix/machdep/$ARCH,
	-I$SRC_ROOT/h/ajax,
	-I$SRC_ROOT/h/class
};

DEFINES = {
	-DNDEBUG,
};
%if ($ARCH <> vax, {
        DEFINES = $DEFINES + '-DIEEE_FP';
});

%include $CONF_ROOT/toolset/generic; # defines compilerset

%if ($COMPILER_SET == ack, {
        MATH_PRIMITIVES = $L_MATH_PRIMITIVE_COMMON + $L_MATH_PRIMITIVE_EM;
}, {
        MATH_PRIMITIVES = $L_MATH_PRIMITIVE_COMMON + $L_MATH_PRIMITIVE_C;
});

# the following library modules can be profiled, if requested:
SOURCEFILES_PROF = {
	$L_AM_CAP,
	$L_AM_CAPSET,
	$L_AM_CIRCBUF,
	$L_AM_CRYPT,
	$L_AM_DEBUG,
	$L_AM_DES,
	$L_AM_DIRGRAPH,
	$L_AM_DISKLABEL,
	$L_AM_ERROR,
	$L_AM_FLIP,
	$L_AM_GOODPORT,
	$L_AM_MISC,
	$L_AM_MONITOR,
	$L_AM_PATH,
	$L_AM_PROCESS,
	$L_AM_PROCESS_SUPPORT,
	$L_AM_PRV,
	# $L_AM_PUTGET,			# in SOURCEFILES_NOPROF
	$L_AM_RRPC,
	$L_AM_SYMTAB,
	$L_AM_SOAP,
	$L_AM_VIRTCIRC,
	$L_STUBS_BULLET,
	$L_STUBS_DIRECT,
	$L_STUBS_FIFO,
	$L_STUBS_FS,
	$L_STUBS_IOP,
	$L_STUBS_IP,
	$L_STUBS_NAME,
	$L_STUBS_PROCESS,
	$L_STUBS_RND,
	$L_STUBS_RUN,
	$L_STUBS_SAK,
	$L_STUBS_SEGMENT,
	$L_STUBS_SOAP,
	$L_STUBS_STD,
	$L_STUBS_SYSTASK,
	$L_STUBS_TAPE,
	$L_STUBS_TIOS,
	$L_STUBS_TIOS_MARSHAL,
	$L_STUBS_TOD,
	$L_STUBS_VIRDISK,
	$L_STUBS_X11,
	$L_LIBC_AJAX,
	$L_LIBC_MACHDEP_MISC,
	# $L_LIBC_MACHDEP_STRING,	# in SOURCEFILES_NOPROF
	$L_LIBC_MISC,
	$L_LIBC_STDIO,
	$L_LIBC_TIME,
	$L_LIBIP_TCPIP,
	$L_LIBIP_TCPIP_RESOLV,
	$L_LIBIP_TCPIP_KEEPALIVE,
	$L_LIBIP_TCPIP_DEBUG,
	$L_LIBIP_TCPIP_HTON,
	$MATH_PRIMITIVES,
	if ($COMPILER_SET == gnu-2, $L_LIBC_GCC, {}),
};

%if (%not defined(L_SYSAM_TIMER), {
	L_SYSAM_TIMER = {};
});

# no profiling on the next library modules:
SOURCEFILES_NOPROF = {
	$L_PROFILING,
	$L_SYSAM_SYSCALL,
	$L_SYSAM_MISC,
	$L_SYSAM_MUTEX,
	$L_SYSAM_TIMER,
	$L_LIBC_MACHDEP_SYS,
	$L_LIBC_MACHDEP_MEMORY,

	# the next ones are in SOURCEFILES_NOPROF just to avoid the overhead:
	$L_LIBC_MACHDEP_STRING,
	$L_AM_PUTGET,
};

%if (defined(PROFILING), {
	%if ($COMPILER_SET == ack, {
		%declare $SOURCEFILES_PROF[flags = { '-p', '-DPROFILING' }];

		# avoid profiling on the malloc module:
		# %declare $SRC_ROOT/lib/libc/misc/malloc.c[flags = {}];
	}, {
		%declare $SOURCEFILES_PROF[flags = { '-pg' }];
	});
});

SOURCEFILES = $SOURCEFILES_PROF + $SOURCEFILES_NOPROF;

%if (%not defined(L_LIBC_MACHDEP_STRING_LLIB), {
	L_LIBC_MACHDEP_STRING_LLIB = {};
});
%if (%not defined(L_LIBC_MACHDEP_MEMORY_LLIB), {
	L_LIBC_MACHDEP_MEMORY_LLIB = {};
});

LINTLIBS = {
	$L_LIBC_LINTLIB,
	$L_SYSAM_LINTLIB,
	$L_LIBC_MACHDEP_STRING_LLIB,
	$L_LIBC_MACHDEP_MEMORY_LLIB,
	if ($COMPILER_SET == ack, $L_MATH_PRIMITIVE_C, {}),
};

LIBNAME = amoeba;
%include $CONF_ROOT/toolset/amoeba.lib;

%if ($COMPILER_SET == ack, {
        %include em-c.amk;      # for $L_MATH_PRIMITIVE_EM
});
