# Copyright 1994 Vrije Universiteit, The Netherlands.
#	
#	@(#)amoeba.kernel	1.3	94/04/05 17:02:07
#
# For full copyright and restrictions on use see the file COPYRIGHT in the
# top level of the Amoeba distribution.

#  Definitions common to all Amoeba kernels.
%if (%not defined(ASFLAGS), {
	ASFLAGS = {};
});

%if (%not defined(CFLAGS), {
	CFLAGS = {};
});

%if (%not defined(LDFLAGS), {
	LDFLAGS = {};
});

%if ($ARCH == mc68000, {
	CFLAGS = {
	    $CFLAGS,
	    -O,
	};
} , {
	%if ($ARCH == i80386, {
		CFLAGS = {
		    $CFLAGS,
		    -O2
		};
	});
});

%if ($ARCH == sparc, {
        CFLAGS = {
	    $CFLAGS,
	    -O2
	};
});

%if ($MACH == sun4m, {
	CFLAGS = {
	    $CFLAGS,
	    -mv8
	};
});

INCLUDES = {
	$INCLUDES,
	-I$SRC_ROOT/h/toolset/gnu-2
};

%include $PWD/gnubin.amk;

ASFLAGS = {
        -mam_$ARCH,
	$GNUBIN_FLAGS,
	-DGNU_ASSEMBLER,
	$ASFLAGS,
	$DEFINES,
	$INCLUDES
};

CFLAGS = {
        -mam_$ARCH,
	$GNUBIN_FLAGS,
	$CFLAGS,
	$DEFINES,
	$INCLUDES
};

LDFLAGS = {
        -mam_$ARCH,
	-kernel,
	$GNUBIN_FLAGS,
	$LDFLAGS,
	%if ($ARCH == i80386, '-n', '-N'),
	-X,
	'-Ttext ' $LDADDR
};

%if (defined(LD_DATA_ADDR), {
	LDFLAGS = {
		$LDFLAGS,
		'-Tdata ' $LD_DATA_ADDR
	};
});

LINTFLAGS = {
	-n,
	$DEFINES,
	$INCLUDES
};

AS = $PWD/do_as;
CC = $PWD/do_gcc;
LD = $PWD/do_ld;
LINT = lint;

# for makeversion
%export CC;
%export CFLAGS ' ';
%export COMPILER_SET;

LIB_KERNEL = $CONF_ROOT/lib/kernel/libkernel.a;
LINT_KERNEL = $CONF_ROOT/lib/kernel/llib-lkernel.ln;

%if (%not defined(LIBRARIES), {
	LIBRARIES = $LIB_KERNEL;
});

%if (%not defined(LINTLIBS), {
	LINTLIBS = {};
});

LINTLIBS = {
	$LINTLIBS,
	$K_SYS_LINTLIB,
	$K_MMU_LINTLIB,
	$K_ARCH_LINTLIB,
	$LINT_KERNEL
};

%include $PWD/generic;
%include kernel_tls.amk;

# for ctags we want the kernel library sources!
%include $CONF_ROOT/lib/kernel/Kernel.srclist;

%cluster
{
	%targets kernel[type = version-program];
	%sources $SOURCEFILES;
};

%cluster lint
{
	%targets lint.out[type = lint-output];
	%sources select($SOURCEFILES, lint-source, %true);
};

%cluster
{
	%targets tags[type = ctags-output];
	%sources select({ $SOURCEFILES, $KERNEL_LIB_SRCS }, C-src-or-incl, %true); 
};

%cluster files
{
	%do exec(mkfiles, args => $SOURCEFILES, stdout => files);
};
