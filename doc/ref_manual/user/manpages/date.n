.\"	@(#)date.n	1.8	94/04/05 15:55:57
.\"
.\" Copyright 1994 Vrije Universiteit and Stichting Mathematisch Centrum,
.\" The Netherlands.
.\" For full copyright and restrictions on use see the file COPYRIGHT in the
.\" top level of the Amoeba distribution.
.\"
.aU
	Software: Arthur D. Olson and many others
	Document: Arthur D. Olson and many others
	Document: Updated by Guido van Rossum, February 1990
.aE
.mT "date" U
show date and time
.SH
Synopsis
.LP
.sC L
date [\-u] [\-c] [\-n] [\-d\ dsttype] [\-t\ minutes-west]
      [-g] [\-s todserver]
      [\-a\ [+|-]sss.fff] [+format] [[yyyy]mmddhhmm[yy][.ss]]
.eC
.SH
Description
.LP
.kW "\fIdate\fP"
.kW "time"
.kW "local time"
.kW "timezone"
.kW "TZ environment variable"
This utility is part of the
.I localtime
package distributed though USENET.
.LP
.I Date
without arguments writes the date and time to the standard output in
the form
.sC
Thu Feb  8 13:51:09 MET 1990
.eC
with
.B MET
replaced by the local timezone's abbreviation
(or by the abbreviation for the timezone specified in the
.B TZ
environment variable if set).
.LP
If a command-line argument starts with a plus sign (` + '),
the rest of the argument is used as a
.I format
that controls what appears in the output.
In the format, when a percent sign (` % ') appears,
it and the character after it are not output,
but rather identify part of the date or time
to be output in a particular way
(or identify a special character to output):
.nf
.if t .in +.5i
.if n .in +2
.ta \w'%M\0\0'u +\w'Wed Mar  8 14:54:40 1989\0\0'u
	Sample output	Explanation
%a	Wed	Abbreviated weekday name
%A	Wednesday	Full weekday name
%b	Mar	Abbreviated month name
%B	March	Full month name
%c	03/08/89 14:54:40	Month/day/year Hour:minute:second
%C	Wed Mar  8 14:54:40 1989	a la \fIasctime\^\fP(3)
%d	08	Day of month (always two digits)
%D	03/08/89	Month/day/year (eight characters)
%e	 8	Day of month (leading zero blanked)
%h	Mar	Abbreviated month name
%H	14	24-hour-clock hour (two digits)
%I	02	12-hour-clock hour (two digits)
%j	067	Julian day number (three digits)
%k	 2	12-hour-clock hour (leading zero blanked)
%l	14	24-hour-clock hour (leading zero blanked)
%m	03	Month number (two digits)
%M	54	Minute (two digits)
%n	\\n	newline character
%p	PM	AM/PM designation
%r	02:54:40 PM	Hour:minute:second AM/PM designation
%R	14:54	Hour:minute
%S	40	Second (two digits)
%t	\\t	tab character
%T	14:54:40	Hour:minute:second
%U	10	Sunday-based week number (two digits)
%w	3	Day number (one digit, Sunday is 0)
%W	10	Monday-based week number (two digits)
%x	03/08/89	Month/day/year (eight characters)
%X	14:54:40	Hour:minute:second
%y	89	Last two digits of year
%Y	1989	Year in full
%Z	EST	Time zone abbreviation
.if t .in -.5i
.if n .in -2
.fi
If a character other than one of those shown above appears after
a percent sign in the format,
that following character is output.
All other characters in the format are copied unchanged to the output;
a newline character is always added at the end of the output.
.LP
In Sunday-based week numbering,
the first Sunday of the year begins week 1;
days preceding it are part of ``week 0.''
In Monday-based week numbering,
the first Monday of the year begins week 1.
.LP
To set the date, use a command line argument with one of the following forms:
.nf
.if t .in +.5i
.if n .in +2
.ta \w'198903081454\0'u
1454	24-hour-clock hours (first two digits) and minutes
081454	Month day (first two digits), hours, and minutes
03081454	Month (two digits, January is 01), month day, hours, minutes
8903081454	Year, month, month day, hours, minutes
0308145489	Month, month day, hours, minutes, year
	(on System V-compatible systems)
030814541989	Month, month day, hours, minutes, four-digit year
198903081454	Four-digit year, month, month day, hours, minutes
.if t .in -.5i
.if n .in -2
.fi
If the century, year, month, or month day is not given,
the current value is used.
Any of the above forms may be followed by a period and two digits that give
the seconds part of the new time; if no seconds are given, zero is assumed.
.mH
Options
.LP
.IP "\fB\-u\fP or \fB\-c\fP
.br
Use GMT when setting and showing the date and time.
.IP \fB\-n\fP
.br
Do not notify other networked systems of the time change.
.IP "\fB\-d\fP dsttype
.br
Set the kernel-stored Daylight Saving Time type to the given value.
(The kernel-stored DST type is used mostly by ``old'' binaries.)
.IP "\fB\-t\fP minutes-west
.br
Set the kernel-stored ``minutes west of GMT'' value to the one given on the
command line.
(The kernel-stored DST type is used mostly by ``old'' binaries.)
.IP "\fB\-a\fP adjustment
.br
Change the time forward (or backward) by the number of seconds
(and fractions thereof) specified in the
.I adjustment\^
argument.
Either the seconds part or the fractions part of the argument (but not both)
may be omitted.
On BSD-based systems,
the adjustment is made by changing the rate at which time advances;
on System-V-based systems, the adjustment is made by changing the time.
.br
.ne 3
.IP "\fB\-s\fP todserver"
.br
Specifies which time of day server has to be used.
Otherwise the default (typically
.I /profile/cap/todsvr/default )
is taken.
.IP \fB\-g\fP
Only meaningful in combination with the
.B \-s
flag.
It is used to synchronize clocks.
It
.I gets
the current time from the default time of day server and
uses that to set the time on the server specified by the
.B \-s
option.
If no
.B \-s
option is specified the default server will be set; a rather pointless
thing to do.
.SH
Example
.LP
To synchronize the time of day server on machine bullet2
with the default time of day server,
the following command can be used:
.sC
date -a+0 -g -s /super/hosts/bullet2/tod
.eC
If the clock on bullet2 has to be adjusted one minute,
use the following command:
.sC
date -a+60 -s /super/hosts/bullet2/tod
.eC
.SH
See Also
.LP
ctime(L),
posix(L),
stdc(L),
zdump(A),
zic(A).
