.\"	@(#)yap.n	1.5	96/02/16 11:11:06
.\"
.\" Copyright 1995 Vrije Universiteit, The Netherlands.
.\" For full copyright and restrictions on use see the file COPYRIGHT in the
.\" top level of the Amoeba distribution.
.\"
.tr ~
.aU
	Software: Ceriel J.H. Jacobs
	Document: Ceriel J.H. Jacobs
	Modified: Gregory J. Sharp, 22/02/90 - converted to Amoeba manual
					       macros and improved the
					       description
		  Gregory J. Sharp, Nov 1995 - the "or" parts of commands
					       were not being printed and
					       the page breaks were poor.
.aE
.mT "yap" U
yet another pager
.SH
Synopsis
.LP
.sC L
yap [-num] [-cnqu] [+command] [filename ...]
.eC
.SH
Description
.LP
.kW "pager"
.I Yap
is a program that allows the user to examine a continuous text, one screen full
at a time on a video display terminal.
It does so by pausing after each screen full,
waiting for the user to type a command.
The commands are described below.
.LP
If no file name is given
.I yap
reads from standard input.
.LP
.I Yap 's
main feature is that it can page both forwards and backwards,
even when reading from standard input.
.mH
Options
.LP
.IP \fB\-num\fP 10
An integer which is the size (in lines) of a page (the initial
.I page-size ).
.IP \fB\-c\fP
Normally,
.I yap
will display each page by beginning at the top of the screen and erasing
each line just before it displays on it.
If the terminal cannot erase a line,
.I yap
will clear the screen before it displays a page.
.br
This avoids scrolling the screen,
making it easier to read while
.I yap
is writing.
The
.B \-c
option causes
.I yap
to scroll the screen instead of beginning at the top of the screen.
This is also done if the terminal can neither erase a line or clear the
screen.
.IP \fB\-n\fP
Normally,
.I yap
recognizes escape sequences for stand-out mode or underlining mode
in the input,
and knows how much space these escape sequences will occupy on the screen,
so that
.I yap
will not fold lines erroneously.
The
.B \-n
option suppresses this pattern matching.
.IP \fB\-q\fP
This option will cause
.I yap
to exit only on the ``quit'' command.
.IP \fB\-u\fP
Normally,
.I yap
handles underlining such as produced by nroff in a manner appropriate
to the particular terminal:
if the terminal can perform underlining well
(ie., the escape sequences for underlining do not occupy space on the
screen),
.I yap
will underline underlined information in the input.
The
.B \-u
option suppresses this underlining.
.IP \fB+\fPcommand
This is taken to be an initial command to
.I yap .
(See the description of the commands below.)
.mH
Environment Variables
.LP
.I Yap
uses the
.I termcap
database to determine the terminal capabilities and the default
.I page-size .
It examines the
.cW TERM
environment variable to identify the terminal type.
If
.cW TERM
is not set, it defaults to
.I dumb .
.I Yap
also examines the
.cW TERMCAP
environment variable to locate the
.I termcap
database.
If
.cW TERMCAP
is not set,
it defaults to
.I /etc/termcap .
.LP
.I Yap
looks in the
.cW YAP
environment variable to pre-set flags.
For instance, if the
.B \-c
mode of operation is preferred,
just set the
.cW YAP
environment variable to
.B \-c .
.LP
The commands of
.I yap
can be bound to sequences of key-strokes.
The environment variable
.cW YAPKEYS
may contain the bindings in the
form of a list of colon-separated `name=sequence' pairs.
The
.I name
is a short mnemonic for the command,
the
.I sequence
is the sequence of key-strokes to be typed to invoke the command.
This sequence may contain a ^X escape, which means CTRL\-X,
and a \\X escape,
which means X.
The latter can be used to get the characters `^', `\\' and `:' in the sequence.
There are two keymaps available,
the default one and a user-defined one.
The
.I "change keymap"
command is used to switch between them.
.LP
.mH
Commands
.LP
The
.I yap
commands are described below.
The mnemonics for the commands are given in parentheses.
The default key sequences (if any) are given after the mnemonic.
Every command takes an optional integer argument,
which may be typed
before the command.
Some commands just ignore it.
The integer argument is referred to as
.I i .
Usually,
if
.I i
is not given,
it defaults to 1.
.de Nc
.LP
\&\\$1 (\fI\\$2\fP)
.B "\\$3
.br
.in+0.5i
..
.de Ec
.in
..
.Nc "visit previous file" bf P
Visit the
.I i -th
previous file given on the command line.
.Ec
.Nc "scroll one line up or go to line" bl "^K ~\fIor\fP~ k"
If
.I i
is not given, scroll one line up.
Otherwise,
.I i
will be interpreted as a line number.
A page starting with the line indicated will then be displayed.
.Ec
.Nc "bottom" bot "l ~\fIor\fP~ $"
Go to the last line of the input.
.Ec
.Nc "display previous page" bp \-
Display the previous page, consisting of
.I i
lines,
(or
.I page-size
lines if no argument is given).
.Ec
.Nc "display previous page and set pagesize" bps Z
Display the previous page, consisting of
.I i
lines,
(or
.I page-size
lines if no argument is given).
If
.I i
is given,
the
.I page-size
is set to
.I i .
.Ec
.Nc "scroll up" bs ^B
Scroll up
.I i
lines (or
.I scroll-size
lines if
.I i
is not given.
The initial
.I scroll-size
is 11).
.Ec
.Nc "search backwards for pattern" bse ?
Search backwards for the
.I i -th
occurrence of a regular expression which will be prompted for.
If there are less than
.I i
occurrences of the expression,
the position in the file remains unchanged.
Otherwise,
a page is displayed, starting two lines before the place where the
expression was found.
The user's erase and kill characters may be used to edit the expression.
Erasing back past the first character cancels the search command.
.Ec
.Nc "skip lines backwards" bsl S
Skip
.I i
lines backwards and display a page.
.Ec
.Nc "skip pages backwards" bsp F
Skip
.I i
pages backwards and display a page.
.Ec
.Nc "scroll up and set scrollsize" bss b
Scroll up
.I i
lines (or
.I scroll-size
lines if
.I i
is not given.
If
.I i
is given, the
.I scroll-size
is set to
.I i .
.Ec
.Nc "change key map" chm ^[
Change from the current key map to the other (if there is one).
.Ec
.Nc "exchange current page and mark" exg x
Set the mark to the current page,
and display the previously marked
page.
.Ec
.Nc "visit next file" ff N
Visit the
.I i -th
next file given in the command line.
.Ec
.Nc "scroll one line down or go to line" fl "^J ~\fIor\fP~ ^M ~\fIor\fP~ j"
If
.I i
is not given,
scroll one line down.
Otherwise,
.I i
will be interpreted as a line number.
A page starting with the line indicated will then be displayed.
.Ec
.Nc "display next page" fp <space>
Display the next page,
consisting of
.I i
lines,
(or
.I page-size
lines if no argument is given).
.Ec
.Nc "display next page and set pagesize" fps z
Display the next page,
consisting of
.I i
lines,
(or
.I page-size
lines if no argument is given).
If
.I i
is given,
the
.I page-size
is set to
.I i .
.Ec
.Nc "scroll down" fs ^D
Scroll down
.I i
lines (or
.I scroll-size
lines if no argument is given).
.Ec
.Nc "search forwards for pattern" fse /
Search forwards for the
.I i -th
match of a regular expression which will be prompted for.
If there are less than
.I i
matches of the expression,
the position in the file remains unchanged.
Otherwise,
a page is displayed,
starting two lines before the place where the match was found.
The user's erase and kill characters may be used to edit the expression.
Erasing back past the first character cancels the search command.
.br
Note: Some systems do not have
.I regexp (L).
On those systems,
searches are still supported,
but regular expressions are not.
.Ec
.Nc "skip lines forwards" fsl s
Skip
.I i
lines and display a page.
.Ec
.Nc "skip pages forwards" fsp f
Skip
.I i
pages and display a page.
.Ec
.Nc "scroll down and set scrollsize" fss d
Scroll down
.I i
lines (or
.I scroll-size
lines if
.I i
is not given).
If
.I i
is given,
the
.I scroll-size
is set to
.I i .
.Ec
.Nc "help" hlp h
Give a short description of all commands that are bound to a key sequence.
.Ec
.Nc "set a mark" mar m
Set a mark on the current page.
.Ec
.Nc "repeat last search" nse n
Search for the
.I i -th
occurrence of the last regular expression entered,
in the direction of the
last search.
.Ec
.Nc "repeat last search in other direction" nsr r
Search for the
.I i -th
occurrence of the last regular expression entered, but in the other direction.
.Ec
.Nc "quit" qui "Q ~\fIor\fP~ q"
Exit from
.I yap .
.Ec
.Nc "redraw" red ^L
Redraw the current page.
.Ec
.Nc "repeat" rep .
Repeat the last command.
This does not always make sense,
so not all commands can be repeated.
.Ec
.Nc "shell escape" shl !
Invoke the shell with a command that will be prompted for.
In the command,
the characters `%' and `!' are replaced with the current file name and the
previous shell command respectively.
The sequences `\\%' and `\\!' are replaced by `%' and `!' respectively.
The user's erase and kill characters can be used to edit the command.
Erasing back past the first character cancels the command.
.Ec
.Nc "pipe to shell command" pip |
Pipe the current input file into a shell command that will be prompted for.
The comments given in the description of the shell escape command apply here
too.
.Ec
.Nc "go to mark" tom '
Display the marked page.
.Ec
.Nc "top" top \&^^
Display a page starting with the first line of the input.
.Ec
.Nc "visit file" vis e
Visit a new file.
The file name will be prompted for.
If return is typed the current file is revisited.
.Ec
.Nc "write input to a file" wrf w
Write the input to a file, whose name will be prompted for.
.Ec
.LP
The commands take effect immediately,
ie. it is not necessary to type a carriage return.
Up to the time when the command sequence itself is given,
the user may give an interrupt to cancel the command being formed.
.mH
Diagnostics
.LP
One hopes these are self-explanatory.
.mH
Files
.LP
.I /etc/termcap
\- terminal capabilities data base.
.mH
Warnings
.LP
.I Yap
will treat the terminal as very stupid
if it has no way of placing the cursor on the home position,
or can neither erase a line or insert one.
.LP
In lines longer than about 2000 characters, a linefeed is silently inserted.
.LP
The percentage of the file read,
given in the prompt when
.I yap
reads from a file (and knows it),
is not always very accurate.
.SH
Example
.LP
.sC
yap myfile
.eC
will display the text in
.I myfile
on the screen.
.SH
See Also
.LP
termcap(L),
regexp(L).
