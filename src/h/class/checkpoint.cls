/*	@(#)checkpoint.cls	1.5	96/02/27 10:27:19 */
/*
 * Copyright 1994 Vrije Universiteit and Stichting Mathematisch Centrum,
 * The Netherlands.
 * For full copyright and restrictions on use see the file COPYRIGHT in
 * the top level of the Amoeba distribution.
 */

/* Old Process Server interface */

/* The operations in this class provide servers generated by AIL with a
   way to support some standard operations from <proc.h>.
   In this way, old clients can start using the new servers right away.
   
   The intention is to use only the server main loop generated for this
   class; the client stubs must be thrown away, since the intention is
   to allow old clients to work, and these old clients will be linked
   with the old (hand-written) library stubs.
   
   The operations defined here use the same request and reply format as
   the hand-written library stubs, but the generated client stubs may
   differ.
   
   There are some restrictions and tricks; these are explained with the
   individual operations. */

/* *** ALL COMMENTS HERE ARE FOR SERVER WRITERS ONLY. ***
   CLIENTS WRITERS SHOULD READ THE MAN PAGES TO THE OLD LIBRARY STUBS. */

#include "amoeba.h"
#include "server/process/proc.h"

#define unshort unsigned short

class checkpoint [PS_CHECKPOINT..PS_CHECKPOINT] {
	
	/* This class represents the interface between the Amoeba kernel
	   and signal handlers.  When a process exits or receives a
	   signal, a checkpoint is sent to a signal handler (which is a
	   server that understands ps_checkpoint requests).
	   The operation ps_checkpoint defines the format of the
	   checkpoint; other definitions in this class reflect
	   additional conventions. */
	
	const MAXPDSIZE = MAX_PDSIZE; /* from proc.h */
	
	ps_checkpoint(*,
		in out		char pdbuf[pdlen:MAXPDSIZE],
		in out:h_size	int pdlen,
		in:h_extra	int cause,
		in:h_offset	long detail);
	/* A checkpoint.  See <nproc.h> and related documentation. */
};
